<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.ssm.domain.Employee">
    <id column="eid" jdbcType="INTEGER" property="eid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
  </resultMap>
    <!--定义联合两表查询的resultMap-->
    <resultMap id="withDept" type="com.ssm.domain.Employee">
        <id column="eid" jdbcType="INTEGER" property="eid" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="ename" jdbcType="VARCHAR" property="ename" />
        <result column="gender" jdbcType="VARCHAR" property="gender" />
        <result column="d_id" jdbcType="INTEGER" property="dId" />
        <association property="department" javaType="com.ssm.domain.Department">
            <id column="did" property="did"/>
            <result column="dname" property="dname"/>
        </association>
    </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eid, email, ename, gender, d_id
  </sql>
  <sql id="selectByExampleWithDept">
e.eid, e.email, e.ename, e.gender, e.d_id, d.did,d.dname
 </sql>
    <!--增添两表联合查询
     List<Employee> selectByExampleWithDept(EmployeeExample example);

    Employee selectByPrimaryKeyWithDept(Integer eid);
    -->
    <select id="selectByExampleWithDept" parameterType="com.ssm.domain.EmployeeExample" resultMap="withDept">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="selectByExampleWithDept" />
        from emp e left join dept d on e.d_id=d.did
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithDept" parameterType="java.lang.Integer" resultMap="withDept">
        select
        <include refid="Base_Column_List" />
        from emp e left join dept d on e.d_id=d.did
        where eid = #{eid,jdbcType=INTEGER}
    </select>

  <select id="selectByExample" parameterType="com.ssm.domain.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emp
    where eid = #{eid,jdbcType=INTEGER}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where eid = #{eid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.domain.EmployeeExample">
    delete from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.domain.Employee">
    insert into emp (eid, email, ename, 
      gender, d_id)
    values (#{eid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{dId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.domain.Employee">
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="dId != null">
        d_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.domain.EmployeeExample" resultType="java.lang.Long">
    select count(*) from emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emp
    <set>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.dId != null">
        d_id = #{record.dId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emp
    set eid = #{record.eid,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      ename = #{record.ename,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      d_id = #{record.dId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.domain.Employee">
    update emp
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="dId != null">
        d_id = #{dId,jdbcType=INTEGER},
      </if>
    </set>
    where eid = #{eid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.domain.Employee">
    update emp
    set email = #{email,jdbcType=VARCHAR},
      ename = #{ename,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      d_id = #{dId,jdbcType=INTEGER}
    where eid = #{eid,jdbcType=INTEGER}
  </update>
</mapper>